
bin/jacobi-2d_host.exe:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 4fe8 <__gmon_start__>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	callq  *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	retq   

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 aa 2e 00 00    	pushq  0x2eaa(%rip)        # 4ed0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 ab 2e 00 00 	bnd jmpq *0x2eab(%rip)        # 4ed8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nopl   (%rax)
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	pushq  $0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmpq 2020 <.plt>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	pushq  $0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmpq 2020 <.plt>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	pushq  $0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmpq 2020 <.plt>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	pushq  $0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmpq 2020 <.plt>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	pushq  $0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmpq 2020 <.plt>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	pushq  $0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmpq 2020 <.plt>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	pushq  $0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmpq 2020 <.plt>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	pushq  $0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmpq 2020 <.plt>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	pushq  $0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmpq 2020 <.plt>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	pushq  $0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmpq 2020 <.plt>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	pushq  $0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmpq 2020 <.plt>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	pushq  $0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmpq 2020 <.plt>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	pushq  $0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmpq 2020 <.plt>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	pushq  $0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmpq 2020 <.plt>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	pushq  $0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmpq 2020 <.plt>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	pushq  $0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmpq 2020 <.plt>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	pushq  $0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmpq 2020 <.plt>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	pushq  $0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmpq 2020 <.plt>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	pushq  $0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmpq 2020 <.plt>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	pushq  $0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmpq 2020 <.plt>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	pushq  $0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmpq 2020 <.plt>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	pushq  $0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmpq 2020 <.plt>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	pushq  $0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmpq 2020 <.plt>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	pushq  $0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmpq 2020 <.plt>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	pushq  $0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmpq 2020 <.plt>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	pushq  $0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmpq 2020 <.plt>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	pushq  $0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmpq 2020 <.plt>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	pushq  $0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmpq 2020 <.plt>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	pushq  $0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmpq 2020 <.plt>
    21ff:	90                   	nop

Disassembly of section .plt.got:

0000000000002200 <__cxa_finalize@plt>:
    2200:	f3 0f 1e fa          	endbr64 
    2204:	f2 ff 25 bd 2d 00 00 	bnd jmpq *0x2dbd(%rip)        # 4fc8 <__cxa_finalize@GLIBC_2.2.5>
    220b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000002210 <__printf_chk@plt>:
    2210:	f3 0f 1e fa          	endbr64 
    2214:	f2 ff 25 c5 2c 00 00 	bnd jmpq *0x2cc5(%rip)        # 4ee0 <__printf_chk@GLIBC_2.3.4>
    221b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002220 <std::basic_filebuf<char, std::char_traits<char> >::close()@plt>:
    2220:	f3 0f 1e fa          	endbr64 
    2224:	f2 ff 25 bd 2c 00 00 	bnd jmpq *0x2cbd(%rip)        # 4ee8 <std::basic_filebuf<char, std::char_traits<char> >::close()@GLIBCXX_3.4>
    222b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002230 <std::__basic_file<char>::is_open() const@plt>:
    2230:	f3 0f 1e fa          	endbr64 
    2234:	f2 ff 25 b5 2c 00 00 	bnd jmpq *0x2cb5(%rip)        # 4ef0 <std::__basic_file<char>::is_open() const@GLIBCXX_3.4>
    223b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002240 <std::ios_base::ios_base()@plt>:
    2240:	f3 0f 1e fa          	endbr64 
    2244:	f2 ff 25 ad 2c 00 00 	bnd jmpq *0x2cad(%rip)        # 4ef8 <std::ios_base::ios_base()@GLIBCXX_3.4>
    224b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002250 <std::ios_base::~ios_base()@plt>:
    2250:	f3 0f 1e fa          	endbr64 
    2254:	f2 ff 25 a5 2c 00 00 	bnd jmpq *0x2ca5(%rip)        # 4f00 <std::ios_base::~ios_base()@GLIBCXX_3.4>
    225b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002260 <__cxa_begin_catch@plt>:
    2260:	f3 0f 1e fa          	endbr64 
    2264:	f2 ff 25 9d 2c 00 00 	bnd jmpq *0x2c9d(%rip)        # 4f08 <__cxa_begin_catch@CXXABI_1.3>
    226b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002270 <__assert_fail@plt>:
    2270:	f3 0f 1e fa          	endbr64 
    2274:	f2 ff 25 95 2c 00 00 	bnd jmpq *0x2c95(%rip)        # 4f10 <__assert_fail@GLIBC_2.2.5>
    227b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002280 <__cxa_atexit@plt>:
    2280:	f3 0f 1e fa          	endbr64 
    2284:	f2 ff 25 8d 2c 00 00 	bnd jmpq *0x2c8d(%rip)        # 4f18 <__cxa_atexit@GLIBC_2.2.5>
    228b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002290 <std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)@plt>:
    2290:	f3 0f 1e fa          	endbr64 
    2294:	f2 ff 25 85 2c 00 00 	bnd jmpq *0x2c85(%rip)        # 4f20 <std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)@GLIBCXX_3.4>
    229b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022a0 <std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@plt>:
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	f2 ff 25 7d 2c 00 00 	bnd jmpq *0x2c7d(%rip)        # 4f28 <std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@GLIBCXX_3.4>
    22ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022b0 <__stack_chk_fail@plt>:
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	f2 ff 25 75 2c 00 00 	bnd jmpq *0x2c75(%rip)        # 4f30 <__stack_chk_fail@GLIBC_2.4>
    22bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022c0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	f2 ff 25 6d 2c 00 00 	bnd jmpq *0x2c6d(%rip)        # 4f38 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    22cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022d0 <free@plt>:
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	f2 ff 25 65 2c 00 00 	bnd jmpq *0x2c65(%rip)        # 4f40 <free@GLIBC_2.2.5>
    22db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022e0 <exit@plt>:
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	f2 ff 25 5d 2c 00 00 	bnd jmpq *0x2c5d(%rip)        # 4f48 <exit@GLIBC_2.2.5>
    22eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022f0 <malloc@plt>:
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	f2 ff 25 55 2c 00 00 	bnd jmpq *0x2c55(%rip)        # 4f50 <malloc@GLIBC_2.2.5>
    22fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002300 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>:
    2300:	f3 0f 1e fa          	endbr64 
    2304:	f2 ff 25 4d 2c 00 00 	bnd jmpq *0x2c4d(%rip)        # 4f58 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@GLIBCXX_3.4>
    230b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002310 <strtol@plt>:
    2310:	f3 0f 1e fa          	endbr64 
    2314:	f2 ff 25 45 2c 00 00 	bnd jmpq *0x2c45(%rip)        # 4f60 <strtol@GLIBC_2.2.5>
    231b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002320 <std::locale::~locale()@plt>:
    2320:	f3 0f 1e fa          	endbr64 
    2324:	f2 ff 25 3d 2c 00 00 	bnd jmpq *0x2c3d(%rip)        # 4f68 <std::locale::~locale()@GLIBCXX_3.4>
    232b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002330 <std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()@plt>:
    2330:	f3 0f 1e fa          	endbr64 
    2334:	f2 ff 25 35 2c 00 00 	bnd jmpq *0x2c35(%rip)        # 4f70 <std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()@GLIBCXX_3.4>
    233b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002340 <std::ios_base::Init::Init()@plt>:
    2340:	f3 0f 1e fa          	endbr64 
    2344:	f2 ff 25 2d 2c 00 00 	bnd jmpq *0x2c2d(%rip)        # 4f78 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    234b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002350 <puts@plt>:
    2350:	f3 0f 1e fa          	endbr64 
    2354:	f2 ff 25 25 2c 00 00 	bnd jmpq *0x2c25(%rip)        # 4f80 <puts@GLIBC_2.2.5>
    235b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002360 <std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@plt>:
    2360:	f3 0f 1e fa          	endbr64 
    2364:	f2 ff 25 1d 2c 00 00 	bnd jmpq *0x2c1d(%rip)        # 4f88 <std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@GLIBCXX_3.4>
    236b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002370 <std::ostream& std::ostream::_M_insert<double>(double)@plt>:
    2370:	f3 0f 1e fa          	endbr64 
    2374:	f2 ff 25 15 2c 00 00 	bnd jmpq *0x2c15(%rip)        # 4f90 <std::ostream& std::ostream::_M_insert<double>(double)@GLIBCXX_3.4.9>
    237b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002380 <gettimeofday@plt>:
    2380:	f3 0f 1e fa          	endbr64 
    2384:	f2 ff 25 0d 2c 00 00 	bnd jmpq *0x2c0d(%rip)        # 4f98 <gettimeofday@GLIBC_2.2.5>
    238b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002390 <__cxa_end_catch@plt>:
    2390:	f3 0f 1e fa          	endbr64 
    2394:	f2 ff 25 05 2c 00 00 	bnd jmpq *0x2c05(%rip)        # 4fa0 <__cxa_end_catch@CXXABI_1.3>
    239b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023a0 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>:
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	f2 ff 25 fd 2b 00 00 	bnd jmpq *0x2bfd(%rip)        # 4fa8 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@GLIBCXX_3.4>
    23ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023b0 <_Unwind_Resume@plt>:
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	f2 ff 25 f5 2b 00 00 	bnd jmpq *0x2bf5(%rip)        # 4fb0 <_Unwind_Resume@GCC_3.0>
    23bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023c0 <std::__basic_file<char>::~__basic_file()@plt>:
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	f2 ff 25 ed 2b 00 00 	bnd jmpq *0x2bed(%rip)        # 4fb8 <std::__basic_file<char>::~__basic_file()@GLIBCXX_3.4>
    23cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023d0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*)@plt>:
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	f2 ff 25 e5 2b 00 00 	bnd jmpq *0x2be5(%rip)        # 4fc0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*)@GLIBCXX_3.4.21>
    23db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000023e0 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .cold]>:
    23e0:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    23e5:	e8 76 ff ff ff       	callq  2360 <std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@plt>
    23ea:	48 8b 05 df 27 00 00 	mov    0x27df(%rip),%rax        # 4bd0 <VTT for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4+0x8>
    23f1:	48 8b 0d e0 27 00 00 	mov    0x27e0(%rip),%rcx        # 4bd8 <VTT for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4+0x10>
    23f8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    23fd:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    2401:	48 89 4c 04 30       	mov    %rcx,0x30(%rsp,%rax,1)
    2406:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    240b:	48 8d 05 26 27 00 00 	lea    0x2726(%rip),%rax        # 4b38 <vtable for std::basic_ios<char, std::char_traits<char> >@@GLIBCXX_3.4+0x10>
    2412:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    2419:	00 
    241a:	e8 31 fe ff ff       	callq  2250 <std::ios_base::~ios_base()@plt>
    241f:	48 89 ef             	mov    %rbp,%rdi
    2422:	e8 89 ff ff ff       	callq  23b0 <_Unwind_Resume@plt>
    2427:	e8 34 fe ff ff       	callq  2260 <__cxa_begin_catch@plt>
    242c:	e8 5f ff ff ff       	callq  2390 <__cxa_end_catch@plt>
    2431:	e9 9a 07 00 00       	jmpq   2bd0 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x260>
    2436:	48 89 ef             	mov    %rbp,%rdi
    2439:	e8 f2 fe ff ff       	callq  2330 <std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()@plt>
    243e:	4c 89 e7             	mov    %r12,%rdi
    2441:	e8 6a ff ff ff       	callq  23b0 <_Unwind_Resume@plt>
    2446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    244d:	00 00 00 

0000000000002450 <main>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	41 57                	push   %r15
    2456:	41 56                	push   %r14
    2458:	41 55                	push   %r13
    245a:	41 54                	push   %r12
    245c:	55                   	push   %rbp
    245d:	53                   	push   %rbx
    245e:	48 83 ec 48          	sub    $0x48,%rsp
    2462:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2469:	00 00 
    246b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2470:	31 c0                	xor    %eax,%eax
    2472:	83 ff 04             	cmp    $0x4,%edi
    2475:	74 13                	je     248a <main+0x3a>
    2477:	48 8d 3d c2 0b 00 00 	lea    0xbc2(%rip),%rdi        # 3040 <_IO_stdin_used+0x40>
    247e:	e8 cd fe ff ff       	callq  2350 <puts@plt>
    2483:	31 ff                	xor    %edi,%edi
    2485:	e8 56 fe ff ff       	callq  22e0 <exit@plt>
    248a:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    248e:	49 89 f5             	mov    %rsi,%r13
    2491:	ba 0a 00 00 00       	mov    $0xa,%edx
    2496:	31 f6                	xor    %esi,%esi
    2498:	e8 73 fe ff ff       	callq  2310 <strtol@plt>
    249d:	49 8b 7d 10          	mov    0x10(%r13),%rdi
    24a1:	ba 0a 00 00 00       	mov    $0xa,%edx
    24a6:	31 f6                	xor    %esi,%esi
    24a8:	49 89 c7             	mov    %rax,%r15
    24ab:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    24b0:	41 89 c4             	mov    %eax,%r12d
    24b3:	e8 58 fe ff ff       	callq  2310 <strtol@plt>
    24b8:	4d 63 f7             	movslq %r15d,%r14
    24bb:	49 8b 75 18          	mov    0x18(%r13),%rsi
    24bf:	48 8d 3d 7a 2b 00 00 	lea    0x2b7a(%rip),%rdi        # 5040 <outfilename[abi:cxx11]>
    24c6:	49 c1 e6 03          	shl    $0x3,%r14
    24ca:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    24cf:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    24d3:	e8 f8 fe ff ff       	callq  23d0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*)@plt>
    24d8:	4c 89 f7             	mov    %r14,%rdi
    24db:	e8 10 fe ff ff       	callq  22f0 <malloc@plt>
    24e0:	4c 89 f7             	mov    %r14,%rdi
    24e3:	49 89 c5             	mov    %rax,%r13
    24e6:	e8 05 fe ff ff       	callq  22f0 <malloc@plt>
    24eb:	48 89 c3             	mov    %rax,%rbx
    24ee:	45 85 ff             	test   %r15d,%r15d
    24f1:	0f 8e c3 00 00 00    	jle    25ba <main+0x16a>
    24f7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    24fc:	31 ed                	xor    %ebp,%ebp
    24fe:	44 8d 78 ff          	lea    -0x1(%rax),%r15d
    2502:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2508:	4c 89 f7             	mov    %r14,%rdi
    250b:	e8 e0 fd ff ff       	callq  22f0 <malloc@plt>
    2510:	4c 89 f7             	mov    %r14,%rdi
    2513:	49 89 44 ed 00       	mov    %rax,0x0(%r13,%rbp,8)
    2518:	e8 d3 fd ff ff       	callq  22f0 <malloc@plt>
    251d:	48 89 04 eb          	mov    %rax,(%rbx,%rbp,8)
    2521:	48 89 e8             	mov    %rbp,%rax
    2524:	48 83 c5 01          	add    $0x1,%rbp
    2528:	49 39 c7             	cmp    %rax,%r15
    252b:	75 db                	jne    2508 <main+0xb8>
    252d:	66 0f ef d2          	pxor   %xmm2,%xmm2
    2531:	f2 0f 10 25 67 0b 00 	movsd  0xb67(%rip),%xmm4        # 30a0 <_IO_stdin_used+0xa0>
    2538:	00 
    2539:	f2 0f 10 1d 67 0b 00 	movsd  0xb67(%rip),%xmm3        # 30a8 <_IO_stdin_used+0xa8>
    2540:	00 
    2541:	31 c9                	xor    %ecx,%ecx
    2543:	f2 0f 2a 54 24 08    	cvtsi2sdl 0x8(%rsp),%xmm2
    2549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2550:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2554:	49 8b 7c cd 00       	mov    0x0(%r13,%rcx,8),%rdi
    2559:	48 8b 34 cb          	mov    (%rbx,%rcx,8),%rsi
    255d:	31 c0                	xor    %eax,%eax
    255f:	f2 0f 2a c9          	cvtsi2sd %ecx,%xmm1
    2563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2568:	8d 50 02             	lea    0x2(%rax),%edx
    256b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    256f:	f2 0f 2a c2          	cvtsi2sd %edx,%xmm0
    2573:	8d 50 03             	lea    0x3(%rax),%edx
    2576:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    257a:	f2 0f 58 c4          	addsd  %xmm4,%xmm0
    257e:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    2582:	f2 0f 11 04 c7       	movsd  %xmm0,(%rdi,%rax,8)
    2587:	66 0f ef c0          	pxor   %xmm0,%xmm0
    258b:	f2 0f 2a c2          	cvtsi2sd %edx,%xmm0
    258f:	48 89 c2             	mov    %rax,%rdx
    2592:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    2596:	f2 0f 58 c3          	addsd  %xmm3,%xmm0
    259a:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    259e:	f2 0f 11 04 c6       	movsd  %xmm0,(%rsi,%rax,8)
    25a3:	48 83 c0 01          	add    $0x1,%rax
    25a7:	49 39 d7             	cmp    %rdx,%r15
    25aa:	75 bc                	jne    2568 <main+0x118>
    25ac:	48 8d 41 01          	lea    0x1(%rcx),%rax
    25b0:	49 39 cf             	cmp    %rcx,%r15
    25b3:	74 05                	je     25ba <main+0x16a>
    25b5:	48 89 c1             	mov    %rax,%rcx
    25b8:	eb 96                	jmp    2550 <main+0x100>
    25ba:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
    25bf:	31 f6                	xor    %esi,%esi
    25c1:	4c 89 f7             	mov    %r14,%rdi
    25c4:	e8 b7 fd ff ff       	callq  2380 <gettimeofday@plt>
    25c9:	48 69 44 24 20 40 42 	imul   $0xf4240,0x20(%rsp),%rax
    25d0:	0f 00 
    25d2:	48 03 44 24 28       	add    0x28(%rsp),%rax
    25d7:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
    25dc:	49 89 c7             	mov    %rax,%r15
    25df:	0f 8e 9b 00 00 00    	jle    2680 <main+0x230>
    25e5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    25ea:	f2 0f 10 15 be 0a 00 	movsd  0xabe(%rip),%xmm2        # 30b0 <_IO_stdin_used+0xb0>
    25f1:	00 
    25f2:	31 f6                	xor    %esi,%esi
    25f4:	44 8b 54 24 1c       	mov    0x1c(%rsp),%r10d
    25f9:	8d 78 fd             	lea    -0x3(%rax),%edi
    25fc:	4c 8d 4f 02          	lea    0x2(%rdi),%r9
    2600:	41 83 fc 02          	cmp    $0x2,%r12d
    2604:	7e 72                	jle    2678 <main+0x228>
    2606:	4d 8b 45 08          	mov    0x8(%r13),%r8
    260a:	31 d2                	xor    %edx,%edx
    260c:	0f 1f 40 00          	nopl   0x0(%rax)
    2610:	4c 89 c1             	mov    %r8,%rcx
    2613:	49 8b 6c d5 00       	mov    0x0(%r13,%rdx,8),%rbp
    2618:	4d 8b 44 d5 10       	mov    0x10(%r13,%rdx,8),%r8
    261d:	b8 01 00 00 00       	mov    $0x1,%eax
    2622:	4c 8b 5c d3 08       	mov    0x8(%rbx,%rdx,8),%r11
    2627:	f2 0f 10 49 08       	movsd  0x8(%rcx),%xmm1
    262c:	0f 1f 40 00          	nopl   0x0(%rax)
    2630:	f2 0f 58 4c c1 f8    	addsd  -0x8(%rcx,%rax,8),%xmm1
    2636:	66 0f 28 c1          	movapd %xmm1,%xmm0
    263a:	f2 0f 10 4c c1 08    	movsd  0x8(%rcx,%rax,8),%xmm1
    2640:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    2644:	f2 41 0f 58 04 c0    	addsd  (%r8,%rax,8),%xmm0
    264a:	f2 0f 58 44 c5 00    	addsd  0x0(%rbp,%rax,8),%xmm0
    2650:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    2654:	f2 41 0f 11 04 c3    	movsd  %xmm0,(%r11,%rax,8)
    265a:	48 83 c0 01          	add    $0x1,%rax
    265e:	49 39 c1             	cmp    %rax,%r9
    2661:	75 cd                	jne    2630 <main+0x1e0>
    2663:	48 8d 42 01          	lea    0x1(%rdx),%rax
    2667:	48 39 d7             	cmp    %rdx,%rdi
    266a:	0f 84 b0 00 00 00    	je     2720 <main+0x2d0>
    2670:	48 89 c2             	mov    %rax,%rdx
    2673:	eb 9b                	jmp    2610 <main+0x1c0>
    2675:	0f 1f 00             	nopl   (%rax)
    2678:	83 c6 01             	add    $0x1,%esi
    267b:	41 39 f2             	cmp    %esi,%r10d
    267e:	75 80                	jne    2600 <main+0x1b0>
    2680:	31 f6                	xor    %esi,%esi
    2682:	4c 89 f7             	mov    %r14,%rdi
    2685:	e8 f6 fc ff ff       	callq  2380 <gettimeofday@plt>
    268a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    268e:	bf 01 00 00 00       	mov    $0x1,%edi
    2693:	48 8d 35 f1 09 00 00 	lea    0x9f1(%rip),%rsi        # 308b <_IO_stdin_used+0x8b>
    269a:	48 69 44 24 20 40 42 	imul   $0xf4240,0x20(%rsp),%rax
    26a1:	0f 00 
    26a3:	48 03 44 24 28       	add    0x28(%rsp),%rax
    26a8:	4c 29 f8             	sub    %r15,%rax
    26ab:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    26b0:	b8 01 00 00 00       	mov    $0x1,%eax
    26b5:	f2 0f 5e 05 db 09 00 	divsd  0x9db(%rip),%xmm0        # 3098 <_IO_stdin_used+0x98>
    26bc:	00 
    26bd:	e8 4e fb ff ff       	callq  2210 <__printf_chk@plt>
    26c2:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    26c6:	48 8d 15 73 29 00 00 	lea    0x2973(%rip),%rdx        # 5040 <outfilename[abi:cxx11]>
    26cd:	4c 89 ee             	mov    %r13,%rsi
    26d0:	e8 9b 02 00 00       	callq  2970 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)>
    26d5:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    26d9:	e8 f2 fb ff ff       	callq  22d0 <free@plt>
    26de:	4c 89 ef             	mov    %r13,%rdi
    26e1:	e8 ea fb ff ff       	callq  22d0 <free@plt>
    26e6:	48 8b 3b             	mov    (%rbx),%rdi
    26e9:	e8 e2 fb ff ff       	callq  22d0 <free@plt>
    26ee:	48 89 df             	mov    %rbx,%rdi
    26f1:	e8 da fb ff ff       	callq  22d0 <free@plt>
    26f6:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    26fb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    2702:	00 00 
    2704:	0f 85 8b 00 00 00    	jne    2795 <main+0x345>
    270a:	48 83 c4 48          	add    $0x48,%rsp
    270e:	31 c0                	xor    %eax,%eax
    2710:	5b                   	pop    %rbx
    2711:	5d                   	pop    %rbp
    2712:	41 5c                	pop    %r12
    2714:	41 5d                	pop    %r13
    2716:	41 5e                	pop    %r14
    2718:	41 5f                	pop    %r15
    271a:	c3                   	retq   
    271b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2720:	4c 8b 43 08          	mov    0x8(%rbx),%r8
    2724:	31 d2                	xor    %edx,%edx
    2726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    272d:	00 00 00 
    2730:	4c 89 c1             	mov    %r8,%rcx
    2733:	48 8b 2c d3          	mov    (%rbx,%rdx,8),%rbp
    2737:	4c 8b 44 d3 10       	mov    0x10(%rbx,%rdx,8),%r8
    273c:	b8 01 00 00 00       	mov    $0x1,%eax
    2741:	4d 8b 5c d5 08       	mov    0x8(%r13,%rdx,8),%r11
    2746:	f2 0f 10 49 08       	movsd  0x8(%rcx),%xmm1
    274b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2750:	f2 0f 58 4c c1 f8    	addsd  -0x8(%rcx,%rax,8),%xmm1
    2756:	66 0f 28 c1          	movapd %xmm1,%xmm0
    275a:	f2 0f 10 4c c1 08    	movsd  0x8(%rcx,%rax,8),%xmm1
    2760:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    2764:	f2 41 0f 58 04 c0    	addsd  (%r8,%rax,8),%xmm0
    276a:	f2 0f 58 44 c5 00    	addsd  0x0(%rbp,%rax,8),%xmm0
    2770:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    2774:	f2 41 0f 11 04 c3    	movsd  %xmm0,(%r11,%rax,8)
    277a:	48 83 c0 01          	add    $0x1,%rax
    277e:	4c 39 c8             	cmp    %r9,%rax
    2781:	75 cd                	jne    2750 <main+0x300>
    2783:	48 8d 42 01          	lea    0x1(%rdx),%rax
    2787:	48 39 fa             	cmp    %rdi,%rdx
    278a:	0f 84 e8 fe ff ff    	je     2678 <main+0x228>
    2790:	48 89 c2             	mov    %rax,%rdx
    2793:	eb 9b                	jmp    2730 <main+0x2e0>
    2795:	e8 16 fb ff ff       	callq  22b0 <__stack_chk_fail@plt>
    279a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000027a0 <_GLOBAL__sub_I__Z11outfilenameB5cxx11>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	48 83 ec 08          	sub    $0x8,%rsp
    27a8:	48 8d 3d b1 28 00 00 	lea    0x28b1(%rip),%rdi        # 5060 <std::__ioinit>
    27af:	e8 8c fb ff ff       	callq  2340 <std::ios_base::Init::Init()@plt>
    27b4:	48 8b 3d 3d 28 00 00 	mov    0x283d(%rip),%rdi        # 4ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    27bb:	48 8d 15 46 28 00 00 	lea    0x2846(%rip),%rdx        # 5008 <__dso_handle>
    27c2:	48 8d 35 97 28 00 00 	lea    0x2897(%rip),%rsi        # 5060 <std::__ioinit>
    27c9:	e8 b2 fa ff ff       	callq  2280 <__cxa_atexit@plt>
    27ce:	48 8d 05 7b 28 00 00 	lea    0x287b(%rip),%rax        # 5050 <outfilename[abi:cxx11]+0x10>
    27d5:	48 8b 3d f4 27 00 00 	mov    0x27f4(%rip),%rdi        # 4fd0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@GLIBCXX_3.4.21>
    27dc:	48 c7 05 61 28 00 00 	movq   $0x0,0x2861(%rip)        # 5048 <outfilename[abi:cxx11]+0x8>
    27e3:	00 00 00 00 
    27e7:	48 89 05 52 28 00 00 	mov    %rax,0x2852(%rip)        # 5040 <outfilename[abi:cxx11]>
    27ee:	48 8d 15 13 28 00 00 	lea    0x2813(%rip),%rdx        # 5008 <__dso_handle>
    27f5:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    27f9:	c6 05 50 28 00 00 00 	movb   $0x0,0x2850(%rip)        # 5050 <outfilename[abi:cxx11]+0x10>
    2800:	48 83 c4 08          	add    $0x8,%rsp
    2804:	e9 77 fa ff ff       	jmpq   2280 <__cxa_atexit@plt>
    2809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002810 <_start>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	31 ed                	xor    %ebp,%ebp
    2816:	49 89 d1             	mov    %rdx,%r9
    2819:	5e                   	pop    %rsi
    281a:	48 89 e2             	mov    %rsp,%rdx
    281d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    2821:	50                   	push   %rax
    2822:	54                   	push   %rsp
    2823:	4c 8d 05 26 05 00 00 	lea    0x526(%rip),%r8        # 2d50 <__libc_csu_fini>
    282a:	48 8d 0d af 04 00 00 	lea    0x4af(%rip),%rcx        # 2ce0 <__libc_csu_init>
    2831:	48 8d 3d 18 fc ff ff 	lea    -0x3e8(%rip),%rdi        # 2450 <main>
    2838:	ff 15 a2 27 00 00    	callq  *0x27a2(%rip)        # 4fe0 <__libc_start_main@GLIBC_2.2.5>
    283e:	f4                   	hlt    
    283f:	90                   	nop

0000000000002840 <deregister_tm_clones>:
    2840:	48 8d 3d d1 27 00 00 	lea    0x27d1(%rip),%rdi        # 5018 <__TMC_END__>
    2847:	48 8d 05 ca 27 00 00 	lea    0x27ca(%rip),%rax        # 5018 <__TMC_END__>
    284e:	48 39 f8             	cmp    %rdi,%rax
    2851:	74 15                	je     2868 <deregister_tm_clones+0x28>
    2853:	48 8b 05 7e 27 00 00 	mov    0x277e(%rip),%rax        # 4fd8 <_ITM_deregisterTMCloneTable>
    285a:	48 85 c0             	test   %rax,%rax
    285d:	74 09                	je     2868 <deregister_tm_clones+0x28>
    285f:	ff e0                	jmpq   *%rax
    2861:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2868:	c3                   	retq   
    2869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002870 <register_tm_clones>:
    2870:	48 8d 3d a1 27 00 00 	lea    0x27a1(%rip),%rdi        # 5018 <__TMC_END__>
    2877:	48 8d 35 9a 27 00 00 	lea    0x279a(%rip),%rsi        # 5018 <__TMC_END__>
    287e:	48 29 fe             	sub    %rdi,%rsi
    2881:	48 89 f0             	mov    %rsi,%rax
    2884:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2888:	48 c1 f8 03          	sar    $0x3,%rax
    288c:	48 01 c6             	add    %rax,%rsi
    288f:	48 d1 fe             	sar    %rsi
    2892:	74 14                	je     28a8 <register_tm_clones+0x38>
    2894:	48 8b 05 55 27 00 00 	mov    0x2755(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable>
    289b:	48 85 c0             	test   %rax,%rax
    289e:	74 08                	je     28a8 <register_tm_clones+0x38>
    28a0:	ff e0                	jmpq   *%rax
    28a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    28a8:	c3                   	retq   
    28a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000028b0 <__do_global_dtors_aux>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	80 3d 65 27 00 00 00 	cmpb   $0x0,0x2765(%rip)        # 5020 <completed.8061>
    28bb:	75 2b                	jne    28e8 <__do_global_dtors_aux+0x38>
    28bd:	55                   	push   %rbp
    28be:	48 83 3d 02 27 00 00 	cmpq   $0x0,0x2702(%rip)        # 4fc8 <__cxa_finalize@GLIBC_2.2.5>
    28c5:	00 
    28c6:	48 89 e5             	mov    %rsp,%rbp
    28c9:	74 0c                	je     28d7 <__do_global_dtors_aux+0x27>
    28cb:	48 8b 3d 36 27 00 00 	mov    0x2736(%rip),%rdi        # 5008 <__dso_handle>
    28d2:	e8 29 f9 ff ff       	callq  2200 <__cxa_finalize@plt>
    28d7:	e8 64 ff ff ff       	callq  2840 <deregister_tm_clones>
    28dc:	c6 05 3d 27 00 00 01 	movb   $0x1,0x273d(%rip)        # 5020 <completed.8061>
    28e3:	5d                   	pop    %rbp
    28e4:	c3                   	retq   
    28e5:	0f 1f 00             	nopl   (%rax)
    28e8:	c3                   	retq   
    28e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000028f0 <frame_dummy>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	e9 77 ff ff ff       	jmpq   2870 <register_tm_clones>
    28f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002900 <get_time()>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	48 83 ec 28          	sub    $0x28,%rsp
    2908:	31 f6                	xor    %esi,%esi
    290a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2911:	00 00 
    2913:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2918:	31 c0                	xor    %eax,%eax
    291a:	48 89 e7             	mov    %rsp,%rdi
    291d:	e8 5e fa ff ff       	callq  2380 <gettimeofday@plt>
    2922:	48 69 04 24 40 42 0f 	imul   $0xf4240,(%rsp),%rax
    2929:	00 
    292a:	48 03 44 24 08       	add    0x8(%rsp),%rax
    292f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    2934:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    293b:	00 00 
    293d:	75 05                	jne    2944 <get_time()+0x44>
    293f:	48 83 c4 28          	add    $0x28,%rsp
    2943:	c3                   	retq   
    2944:	e8 67 f9 ff ff       	callq  22b0 <__stack_chk_fail@plt>
    2949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002950 <elapsed_time(long long, long long)>:
    2950:	f3 0f 1e fa          	endbr64 
    2954:	48 29 fe             	sub    %rdi,%rsi
    2957:	66 0f ef c0          	pxor   %xmm0,%xmm0
    295b:	f2 48 0f 2a c6       	cvtsi2sd %rsi,%xmm0
    2960:	f2 0f 5e 05 30 07 00 	divsd  0x730(%rip),%xmm0        # 3098 <_IO_stdin_used+0x98>
    2967:	00 
    2968:	c3                   	retq   
    2969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002970 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)>:
    2970:	f3 0f 1e fa          	endbr64 
    2974:	41 57                	push   %r15
    2976:	41 56                	push   %r14
    2978:	41 55                	push   %r13
    297a:	49 89 d5             	mov    %rdx,%r13
    297d:	41 54                	push   %r12
    297f:	49 89 f4             	mov    %rsi,%r12
    2982:	55                   	push   %rbp
    2983:	53                   	push   %rbx
    2984:	89 fb                	mov    %edi,%ebx
    2986:	48 81 ec 48 02 00 00 	sub    $0x248,%rsp
    298d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2994:	00 00 
    2996:	48 89 84 24 38 02 00 	mov    %rax,0x238(%rsp)
    299d:	00 
    299e:	31 c0                	xor    %eax,%eax
    29a0:	4c 8d bc 24 28 01 00 	lea    0x128(%rsp),%r15
    29a7:	00 
    29a8:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    29ad:	4c 89 ff             	mov    %r15,%rdi
    29b0:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    29b5:	e8 86 f8 ff ff       	callq  2240 <std::ios_base::ios_base()@plt>
    29ba:	48 8d 05 77 21 00 00 	lea    0x2177(%rip),%rax        # 4b38 <vtable for std::basic_ios<char, std::char_traits<char> >@@GLIBCXX_3.4+0x10>
    29c1:	31 f6                	xor    %esi,%esi
    29c3:	48 c7 84 24 00 02 00 	movq   $0x0,0x200(%rsp)
    29ca:	00 00 00 00 00 
    29cf:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    29d6:	00 
    29d7:	31 c0                	xor    %eax,%eax
    29d9:	66 89 84 24 08 02 00 	mov    %ax,0x208(%rsp)
    29e0:	00 
    29e1:	48 8b 05 e8 21 00 00 	mov    0x21e8(%rip),%rax        # 4bd0 <VTT for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4+0x8>
    29e8:	48 c7 84 24 10 02 00 	movq   $0x0,0x210(%rsp)
    29ef:	00 00 00 00 00 
    29f4:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    29f8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    29fd:	48 8b 05 d4 21 00 00 	mov    0x21d4(%rip),%rax        # 4bd8 <VTT for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4+0x10>
    2a04:	48 c7 84 24 18 02 00 	movq   $0x0,0x218(%rsp)
    2a0b:	00 00 00 00 00 
    2a10:	48 c7 84 24 20 02 00 	movq   $0x0,0x220(%rsp)
    2a17:	00 00 00 00 00 
    2a1c:	48 01 ef             	add    %rbp,%rdi
    2a1f:	48 c7 84 24 28 02 00 	movq   $0x0,0x228(%rsp)
    2a26:	00 00 00 00 00 
    2a2b:	48 89 07             	mov    %rax,(%rdi)
    2a2e:	e8 cd f8 ff ff       	callq  2300 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>
    2a33:	48 8d 05 46 22 00 00 	lea    0x2246(%rip),%rax        # 4c80 <vtable for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4+0x18>
    2a3a:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    2a3f:	48 83 c0 28          	add    $0x28,%rax
    2a43:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    2a4a:	00 
    2a4b:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
    2a50:	48 89 c7             	mov    %rax,%rdi
    2a53:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2a58:	49 89 c6             	mov    %rax,%r14
    2a5b:	e8 40 f8 ff ff       	callq  22a0 <std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@plt>
    2a60:	4c 89 f6             	mov    %r14,%rsi
    2a63:	4c 89 ff             	mov    %r15,%rdi
    2a66:	e8 95 f8 ff ff       	callq  2300 <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@plt>
    2a6b:	49 8b 75 00          	mov    0x0(%r13),%rsi
    2a6f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    2a74:	ba 10 00 00 00       	mov    $0x10,%edx
    2a79:	e8 12 f8 ff ff       	callq  2290 <std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)@plt>
    2a7e:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    2a83:	48 8b 7a e8          	mov    -0x18(%rdx),%rdi
    2a87:	48 01 ef             	add    %rbp,%rdi
    2a8a:	48 85 c0             	test   %rax,%rax
    2a8d:	0f 84 b7 01 00 00    	je     2c4a <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x2da>
    2a93:	31 f6                	xor    %esi,%esi
    2a95:	e8 06 f9 ff ff       	callq  23a0 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
    2a9a:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    2aa1:	00 
    2aa2:	48 89 c7             	mov    %rax,%rdi
    2aa5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2aaa:	e8 81 f7 ff ff       	callq  2230 <std::__basic_file<char>::is_open() const@plt>
    2aaf:	84 c0                	test   %al,%al
    2ab1:	0f 84 c4 01 00 00    	je     2c7b <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x30b>
    2ab7:	85 db                	test   %ebx,%ebx
    2ab9:	0f 8e d0 00 00 00    	jle    2b8f <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x21f>
    2abf:	44 8d 73 ff          	lea    -0x1(%rbx),%r14d
    2ac3:	4c 8d 3d bf 05 00 00 	lea    0x5bf(%rip),%r15        # 3089 <_IO_stdin_used+0x89>
    2aca:	4b 8d 44 f4 08       	lea    0x8(%r12,%r14,8),%rax
    2acf:	44 89 74 24 0c       	mov    %r14d,0xc(%rsp)
    2ad4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2ae0:	31 db                	xor    %ebx,%ebx
    2ae2:	eb 14                	jmp    2af8 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x188>
    2ae4:	0f 1f 40 00          	nopl   0x0(%rax)
    2ae8:	48 8d 43 01          	lea    0x1(%rbx),%rax
    2aec:	49 39 de             	cmp    %rbx,%r14
    2aef:	0f 84 8b 00 00 00    	je     2b80 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x210>
    2af5:	48 89 c3             	mov    %rax,%rbx
    2af8:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    2afd:	48 89 ef             	mov    %rbp,%rdi
    2b00:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
    2b07:	00 
    2b08:	48 8b 50 e8          	mov    -0x18(%rax),%rdx
    2b0c:	48 01 ea             	add    %rbp,%rdx
    2b0f:	8b 42 18             	mov    0x18(%rdx),%eax
    2b12:	48 c7 42 08 04 00 00 	movq   $0x4,0x8(%rdx)
    2b19:	00 
    2b1a:	25 fb fe ff ff       	and    $0xfffffefb,%eax
    2b1f:	83 c8 04             	or     $0x4,%eax
    2b22:	89 42 18             	mov    %eax,0x18(%rdx)
    2b25:	49 8b 04 24          	mov    (%r12),%rax
    2b29:	f2 0f 10 04 d8       	movsd  (%rax,%rbx,8),%xmm0
    2b2e:	e8 3d f8 ff ff       	callq  2370 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    2b33:	48 89 c7             	mov    %rax,%rdi
    2b36:	ba 01 00 00 00       	mov    $0x1,%edx
    2b3b:	4c 89 fe             	mov    %r15,%rsi
    2b3e:	e8 7d f7 ff ff       	callq  22c0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    2b43:	39 5c 24 0c          	cmp    %ebx,0xc(%rsp)
    2b47:	75 9f                	jne    2ae8 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x178>
    2b49:	49 8b 04 24          	mov    (%r12),%rax
    2b4d:	48 89 ef             	mov    %rbp,%rdi
    2b50:	f2 42 0f 10 04 28    	movsd  (%rax,%r13,1),%xmm0
    2b56:	e8 15 f8 ff ff       	callq  2370 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    2b5b:	48 89 c7             	mov    %rax,%rdi
    2b5e:	ba 01 00 00 00       	mov    $0x1,%edx
    2b63:	48 8d 35 2a 05 00 00 	lea    0x52a(%rip),%rsi        # 3094 <_IO_stdin_used+0x94>
    2b6a:	e8 51 f7 ff ff       	callq  22c0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    2b6f:	48 8d 43 01          	lea    0x1(%rbx),%rax
    2b73:	49 39 de             	cmp    %rbx,%r14
    2b76:	0f 85 79 ff ff ff    	jne    2af5 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x185>
    2b7c:	0f 1f 40 00          	nopl   0x0(%rax)
    2b80:	49 83 c4 08          	add    $0x8,%r12
    2b84:	4c 39 64 24 10       	cmp    %r12,0x10(%rsp)
    2b89:	0f 85 51 ff ff ff    	jne    2ae0 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x170>
    2b8f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    2b94:	e8 87 f6 ff ff       	callq  2220 <std::basic_filebuf<char, std::char_traits<char> >::close()@plt>
    2b99:	48 85 c0             	test   %rax,%rax
    2b9c:	0f 84 b8 00 00 00    	je     2c5a <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x2ea>
    2ba2:	48 8d 05 d7 20 00 00 	lea    0x20d7(%rip),%rax        # 4c80 <vtable for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4+0x18>
    2ba9:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    2bae:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    2bb3:	48 83 c0 28          	add    $0x28,%rax
    2bb7:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    2bbe:	00 
    2bbf:	48 8d 05 32 20 00 00 	lea    0x2032(%rip),%rax        # 4bf8 <vtable for std::basic_filebuf<char, std::char_traits<char> >@@GLIBCXX_3.4+0x10>
    2bc6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2bcb:	e8 50 f6 ff ff       	callq  2220 <std::basic_filebuf<char, std::char_traits<char> >::close()@plt>
    2bd0:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    2bd5:	e8 e6 f7 ff ff       	callq  23c0 <std::__basic_file<char>::~__basic_file()@plt>
    2bda:	48 8d 05 77 1f 00 00 	lea    0x1f77(%rip),%rax        # 4b58 <vtable for std::basic_streambuf<char, std::char_traits<char> >@@GLIBCXX_3.4+0x10>
    2be1:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
    2be6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2beb:	e8 30 f7 ff ff       	callq  2320 <std::locale::~locale()@plt>
    2bf0:	48 8b 05 d9 1f 00 00 	mov    0x1fd9(%rip),%rax        # 4bd0 <VTT for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4+0x8>
    2bf7:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    2bfc:	48 8b 0d d5 1f 00 00 	mov    0x1fd5(%rip),%rcx        # 4bd8 <VTT for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4+0x10>
    2c03:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    2c08:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    2c0c:	48 89 4c 04 30       	mov    %rcx,0x30(%rsp,%rax,1)
    2c11:	48 8d 05 20 1f 00 00 	lea    0x1f20(%rip),%rax        # 4b38 <vtable for std::basic_ios<char, std::char_traits<char> >@@GLIBCXX_3.4+0x10>
    2c18:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    2c1f:	00 
    2c20:	e8 2b f6 ff ff       	callq  2250 <std::ios_base::~ios_base()@plt>
    2c25:	48 8b 84 24 38 02 00 	mov    0x238(%rsp),%rax
    2c2c:	00 
    2c2d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    2c34:	00 00 
    2c36:	75 3e                	jne    2c76 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x306>
    2c38:	48 81 c4 48 02 00 00 	add    $0x248,%rsp
    2c3f:	5b                   	pop    %rbx
    2c40:	5d                   	pop    %rbp
    2c41:	41 5c                	pop    %r12
    2c43:	41 5d                	pop    %r13
    2c45:	41 5e                	pop    %r14
    2c47:	41 5f                	pop    %r15
    2c49:	c3                   	retq   
    2c4a:	8b 77 20             	mov    0x20(%rdi),%esi
    2c4d:	83 ce 04             	or     $0x4,%esi
    2c50:	e8 4b f7 ff ff       	callq  23a0 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
    2c55:	e9 40 fe ff ff       	jmpq   2a9a <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x12a>
    2c5a:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    2c5f:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    2c63:	48 01 ef             	add    %rbp,%rdi
    2c66:	8b 77 20             	mov    0x20(%rdi),%esi
    2c69:	83 ce 04             	or     $0x4,%esi
    2c6c:	e8 2f f7 ff ff       	callq  23a0 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
    2c71:	e9 2c ff ff ff       	jmpq   2ba2 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x232>
    2c76:	e8 35 f6 ff ff       	callq  22b0 <__stack_chk_fail@plt>
    2c7b:	48 8d 0d 86 03 00 00 	lea    0x386(%rip),%rcx        # 3008 <_IO_stdin_used+0x8>
    2c82:	ba 8c 00 00 00       	mov    $0x8c,%edx
    2c87:	48 8d 35 d8 03 00 00 	lea    0x3d8(%rip),%rsi        # 3066 <_IO_stdin_used+0x66>
    2c8e:	48 8d 3d e3 03 00 00 	lea    0x3e3(%rip),%rdi        # 3078 <_IO_stdin_used+0x78>
    2c95:	e8 d6 f5 ff ff       	callq  2270 <__assert_fail@plt>
    2c9a:	f3 0f 1e fa          	endbr64 
    2c9e:	48 89 c5             	mov    %rax,%rbp
    2ca1:	e9 60 f7 ff ff       	jmpq   2406 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .cold]+0x26>
    2ca6:	f3 0f 1e fa          	endbr64 
    2caa:	48 89 c7             	mov    %rax,%rdi
    2cad:	e9 75 f7 ff ff       	jmpq   2427 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .cold]+0x47>
    2cb2:	f3 0f 1e fa          	endbr64 
    2cb6:	48 89 c5             	mov    %rax,%rbp
    2cb9:	e9 22 f7 ff ff       	jmpq   23e0 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .cold]>
    2cbe:	f3 0f 1e fa          	endbr64 
    2cc2:	49 89 c4             	mov    %rax,%r12
    2cc5:	e9 6c f7 ff ff       	jmpq   2436 <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .cold]+0x56>
    2cca:	f3 0f 1e fa          	endbr64 
    2cce:	48 89 c5             	mov    %rax,%rbp
    2cd1:	e9 14 f7 ff ff       	jmpq   23ea <output_printfile(int, double**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .cold]+0xa>
    2cd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2cdd:	00 00 00 

0000000000002ce0 <__libc_csu_init>:
    2ce0:	f3 0f 1e fa          	endbr64 
    2ce4:	41 57                	push   %r15
    2ce6:	4c 8d 3d 23 1e 00 00 	lea    0x1e23(%rip),%r15        # 4b10 <__frame_dummy_init_array_entry>
    2ced:	41 56                	push   %r14
    2cef:	49 89 d6             	mov    %rdx,%r14
    2cf2:	41 55                	push   %r13
    2cf4:	49 89 f5             	mov    %rsi,%r13
    2cf7:	41 54                	push   %r12
    2cf9:	41 89 fc             	mov    %edi,%r12d
    2cfc:	55                   	push   %rbp
    2cfd:	48 8d 2d 1c 1e 00 00 	lea    0x1e1c(%rip),%rbp        # 4b20 <__do_global_dtors_aux_fini_array_entry>
    2d04:	53                   	push   %rbx
    2d05:	4c 29 fd             	sub    %r15,%rbp
    2d08:	48 83 ec 08          	sub    $0x8,%rsp
    2d0c:	e8 ef f2 ff ff       	callq  2000 <_init>
    2d11:	48 c1 fd 03          	sar    $0x3,%rbp
    2d15:	74 1f                	je     2d36 <__libc_csu_init+0x56>
    2d17:	31 db                	xor    %ebx,%ebx
    2d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2d20:	4c 89 f2             	mov    %r14,%rdx
    2d23:	4c 89 ee             	mov    %r13,%rsi
    2d26:	44 89 e7             	mov    %r12d,%edi
    2d29:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    2d2d:	48 83 c3 01          	add    $0x1,%rbx
    2d31:	48 39 dd             	cmp    %rbx,%rbp
    2d34:	75 ea                	jne    2d20 <__libc_csu_init+0x40>
    2d36:	48 83 c4 08          	add    $0x8,%rsp
    2d3a:	5b                   	pop    %rbx
    2d3b:	5d                   	pop    %rbp
    2d3c:	41 5c                	pop    %r12
    2d3e:	41 5d                	pop    %r13
    2d40:	41 5e                	pop    %r14
    2d42:	41 5f                	pop    %r15
    2d44:	c3                   	retq   
    2d45:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    2d4c:	00 00 00 00 

0000000000002d50 <__libc_csu_fini>:
    2d50:	f3 0f 1e fa          	endbr64 
    2d54:	c3                   	retq   

Disassembly of section .fini:

0000000000002d58 <_fini>:
    2d58:	f3 0f 1e fa          	endbr64 
    2d5c:	48 83 ec 08          	sub    $0x8,%rsp
    2d60:	48 83 c4 08          	add    $0x8,%rsp
    2d64:	c3                   	retq   
